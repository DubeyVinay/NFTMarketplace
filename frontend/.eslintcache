[{"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/index.js":"1","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/App.js":"2","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/reportWebVitals.js":"3","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Layout/Layout.jsx":"4","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/routes/Routers.js":"5","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Header/Header.jsx":"6","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Footer/Footer.jsx":"7","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Market.jsx":"8","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Wallet.jsx":"9","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Create.jsx":"10","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Contact.jsx":"11","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Home.jsx":"12","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/NftForm/NftForm.jsx":"13","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ui/HeroSection.jsx":"14","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/FixedPriceApi.js":"15","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/utils/utils.js":"16","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/MarketPlace/MarketPlace.jsx":"17","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NonceApi.js":"18","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/UserProfile.jsx":"19","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/MarketplaceApi.js":"20","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NFTDetailsApi.js":"21","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/NFTDetail.jsx":"22","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Header/header.jsx":"23","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Footer/footer.jsx":"24"},{"size":1134,"mtime":1661425818710,"results":"25","hashOfConfig":"26"},{"size":187,"mtime":1661425818688,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1661425818713,"results":"28","hashOfConfig":"26"},{"size":314,"mtime":1661428104827,"results":"29","hashOfConfig":"26"},{"size":858,"mtime":1661425818713,"results":"30","hashOfConfig":"26"},{"size":3281,"mtime":1659695351333,"results":"31","hashOfConfig":"26"},{"size":2485,"mtime":1657806336818,"results":"32","hashOfConfig":"26"},{"size":2169,"mtime":1661425818712,"results":"33","hashOfConfig":"26"},{"size":5331,"mtime":1661425818712,"results":"34","hashOfConfig":"26"},{"size":274,"mtime":1661425818711,"results":"35","hashOfConfig":"26"},{"size":115,"mtime":1661425818711,"results":"36","hashOfConfig":"26"},{"size":172,"mtime":1661425818711,"results":"37","hashOfConfig":"26"},{"size":14938,"mtime":1661509488221,"results":"38","hashOfConfig":"26"},{"size":1003,"mtime":1661425818692,"results":"39","hashOfConfig":"26"},{"size":560,"mtime":1661425818688,"results":"40","hashOfConfig":"26"},{"size":3305,"mtime":1661758984863,"results":"41","hashOfConfig":"26"},{"size":5378,"mtime":1659705042589,"results":"42","hashOfConfig":"26"},{"size":265,"mtime":1659532527171,"results":"43","hashOfConfig":"26"},{"size":4385,"mtime":1660903363640,"results":"44","hashOfConfig":"26"},{"size":1429,"mtime":1661321672532,"results":"45","hashOfConfig":"26"},{"size":498,"mtime":1659701741549,"results":"46","hashOfConfig":"26"},{"size":8247,"mtime":1661773031555,"results":"47","hashOfConfig":"26"},{"size":3281,"mtime":1661425818692,"results":"48","hashOfConfig":"26"},{"size":2485,"mtime":1661425818691,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"26q3mu",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/index.js",[],["110","111"],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/App.js",["112"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return <Layout/>\n}\n\nexport default App;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/reportWebVitals.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Layout/Layout.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/routes/Routers.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Header/Header.jsx",["113","114","115","116"],"import React from 'react'\nimport { Container } from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useRef, useEffect } from 'react';\nimport '../Header/Header.css'\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { useState } from 'react';\n\n\nconst NAV__LINKS = [\n  {\n    display: 'Home',\n    url: '/home '\n  },\n  {\n    display: 'Market',\n    url: '/market '\n  },\n  {\n    display: 'Create',\n    url: '/create '\n  },\n  {\n    display: 'Contact',\n    url: '/contact '\n  },\n  {\n    display: 'Wallet',\n    url: '/wallet '\n  },\n  {\n    display: 'User',\n    url: '/user '\n  },\n]\n\nconst Header = () => {\n\n  const { account, activate } = useWeb3React();\n  const [colorChange,setColorChange] = useState(false);\n\n  const headerRef = useRef(null);\n\n  const menuRef = useRef(null);\n\n  const toggleMenu = () => menuRef.current.classList.toggle('active__menu');\n\n \n\n  const Injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42, 56, 137],\n\n\n  });\n\n  const connect = () => {\n\n\n    if (typeof window.ethereum == 'undefined') {\n      console.log('MetaMask is not installed!');\n      alert('MetaMask is not installed!')\n    }\n    else {\n\n      activate(Injected);\n\n      setProvider(\"Injected\");\n\n      localStorage.setItem('isWalletConnected', true)\n      // this.setState({\n      //   isActive:true\n      // })\n\n    }\n  }\n\n  const setProvider = (type) => {\n    window.localStorage.setItem(\"provider\", type);\n  };\n\n  useEffect(() => {\n    const connectWalletOnPageLoad = async () => {\n      if (localStorage?.getItem('isWalletConnected') === 'true') {\n        try {\n          await connect();\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad()\n  }, []);\n\n\n\n  return <header className=\"header\">\n    <Container>\n      <div className=\"navigation\" sticky=\"top\">\n        <div className=\"logo\">\n          <Link to='/home'><h2 className='d-flex gap-2 align-items-center'>\n            <span><i class=\"ri-store-2-fill\"></i></span> NFT Marketplace\n          </h2>\n          </Link>\n        </div>\n\n        <div className=\"nav__right d-flex align-items-center gap-5\">\n\n          {\n            !account ? (<button className=\"btn d-flex align-items-center gap-2\">\n              <Link to='/wallet'><span><i class=\"ri-wallet-2-line\"></i></span>Connect Wallet</Link>\n            </button>) : (<button className=\"btn d-flex align-items-center gap-2\"><Link to='/user'><i class=\"ri-store-2-fill\"></i></Link></button>)\n\n          }\n\n          <div>\n            <span className=\"mobile__menu\"><i class=\"ri-menu-2-line\" onClick={toggleMenu}></i></span>\n            <div className=\"nav__menu\" ref={menuRef} onClick={toggleMenu} >\n              <ul className=\"nav__list\">\n\n                {\n                  NAV__LINKS.map((item, index) => (<li className='nav__item' key={index}>\n                    <NavLink to={item.url} className={(navClass) => navClass.isActive ? 'active' : ''}>{item.display}</NavLink>\n                  </li>\n                  ))}\n\n              </ul>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </Container>\n  </header>\n}\n\nexport default Header",["117","118"],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Footer/Footer.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Market.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Wallet.jsx",["119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React from 'react'\nimport { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n//import { toHex, truncateAddress } from '../components/utils/utils';\n//import { networkParams } from '../components/networks/networks';\nimport { Container, Row, Col, Button, Toast } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from '../components/utils/utils';\nimport \"./wallet.css\"\n\n\n\nconst Wallet = () => {\n  const isActive = localStorage.getItem(\"isActive\");\n  \n  const { activate, deactivate, account, library, chainId, active } = useWeb3React();\n  const [network, setNetwork] = useState(undefined);\n  const [message, setMessage] = useState(\"\");\n  const [signature, setSignature] = useState(\"\");\n  const [verified, setVerified] = useState();\n  // const isActive = localStorage.getItem(\"isActive\");\n\n  const handleNetwork = (e) =>{\n    const id = e.target.supportedChainIds;\n    setNetwork(Number(id));\n  };\n\n  // if (typeof window.ethereum == 'undefined') {\n  //   console.log('MetaMask is not installed!');\n  // }\n  \n    const Injected = new InjectedConnector({\n      supportedChainIds: [1, 3, 4, 5, 42,56, 137],\n     \n      \n    });\n  \n\n   \n  const coinbasewallet = async () =>{\n  try {\n    const CoinbaseWallet = new WalletLinkConnector({\n    \n      url: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n      appName: \"Web3-react Demo\",\n      supportedChainIds: [1, 3, 4, 5, 42],\n    }); \n  } \n  catch (error) {\n    console.log(error);\n    alert(\"Coinbasewallet not found\");\n  }\n}\n   \n  \n   const WalletConnect = new WalletConnectConnector({\n    rpcUrl: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n  });\n\n  const switchNetwork = async () => {\n    try {\n      await library.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        //params: [{ chainId: toHex(network) }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await library.provider.request({\n            method: \"wallet_addEthereumChain\",\n            //params: [networkParams[toHex(network)]]\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const connectWalletOnPageLoad = async () => {\n      if (localStorage?.getItem('isWalletConnected') === 'true') {\n        try {\n          await connect();\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad()\n  }, []);\n\n  const refreshState = () => {\n    window.localStorage.setItem(\"provider\", undefined);\n    setNetwork(\"\");\n    setMessage(\"\");\n    setSignature(\"\");\n    setVerified(undefined);\n  };\n  const setProvider = (type) => {\n    window.localStorage.setItem(\"provider\", type);\n  };\n\n  // };\n\n  const connect = () =>{\n\n\n      if (typeof window.ethereum == 'undefined') {\n    console.log('MetaMask is not installed!');\n    alert('MetaMask is not installed!')\n    }\n    else{\n      \n      activate(Injected);\n      \n      setProvider(\"Injected\");\n    \n      localStorage.setItem('isWalletConnected',true)\n      // this.setState({\n      //   isActive:true\n      // })\n     \n    }\n    }\n  \n  \n  console.log(\"ccccccc\",account);\n  \n  return (\n    <Container>\n      <Row>\n        <div>\n\n          <div className='wallet__btns d-flex gap-2 align-items-center'>\n          <Col lg=\"3\">\n          <div >\n            {/* {this.state.isActive ? \"true\" : \"false\"} */}\n          \n          <Button onClick={connect}\n                  className=\"btn__metamask\">\n              <span>Connect to Metamask</span>\n          </Button>\n\n          \n          \n        </div>\n          </Col>\n          <Col lg=\"3\">\n          <div >\n          \n          <Button onClick={() => {\n                    activate(coinbasewallet.CoinbaseWallet);\n                  }} className=\"btn__coinbase\">\n              <span>Connect to Coinbase</span>\n          </Button>\n          \n        </div>\n          </Col>\n          <Col lg=\"3\">\n          <div >\n          \n          <Button onClick={() => {\n                    activate(WalletConnect);\n                  }} className=\"btn__walletconnect\">\n              <span>Connect to Wallet Connect</span>\n          </Button>\n          \n        </div>\n          </Col>\n          <Col>\n            \n              {/* <Button onClick={disconnect}>Disconnect</Button> */}\n            \n          </Col>\n          </div>\n        </div>\n      </Row>\n      <Row>\n        <div className='connect__info'>\n\n          <Col lg=\"4\">\n            <p>Connection Status:</p>\n            {active ? (<span>Connected</span>) : <span>Not Connected</span>}\n          </Col>\n          <Col lg=\"4\">\n            <p>\n            {/* {'Account: ${truncateAddress(account)}`} */}\n            </p>\n          </Col>\n          <Col lg=\"4\">\n            <p>\n            {`Network ID: ${chainId ? chainId : \"No Network\"}`}\n            </p>\n          </Col>\n        </div>\n      </Row> \n    </Container>\n  )}\n\nexport default Wallet;","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Create.jsx",["133","134","135","136","137"],"import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\nimport {Form, Button} from 'react-bootstrap'\nimport './create.css'\nimport NftForm from '../components/NftForm/NftForm'\nconst Create = () => {\n  return (\n    <NftForm/>\n   \n  )\n}\n\nexport default Create;","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Contact.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Home.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/NftForm/NftForm.jsx",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useLayoutEffect } from \"react\";\n\nimport { useState, useEffect, setState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { createMarketplaceNFT } from \"../ApiCalls/MarketplaceApi\"\nimport { createNFT } from \"../ApiCalls/NFTDetailsApi\";\nimport axios from \"axios\";\n\nimport { Buffer } from \"buffer\";\n\nimport '../NftForm/NftForm.css'\nimport Switch from 'react-switch'\n\nimport { create } from 'ipfs-http-client';\nimport { useWeb3React } from \"@web3-react/core\";\nimport Web3 from \"web3\";\nimport { SetApprovalForAll, Sign } from \"../utils/utils\"\nimport { Nonce, updateNonce } from \"../ApiCalls/NonceApi\";\nimport { useNavigate } from \"react-router-dom\"\nimport { errors } from \"ethers\";\nimport {useForm} from \"react-hook-form\";\n\n\n\nimport pinataSDK from '@pinata/sdk';\n\n\n\nconst client = create('https://ipfs.infura.io:5001/api/');\n\n\nconst NftForm = () => {\n  let flag = 0;\n\n  const navigate = useNavigate();\n\n  let web3 = new Web3(window.ethereum);\n\n  const { account, library } = useWeb3React();\n  const {register, errors} = useForm(); \n  const [buffer, setBuffer] = useState(null);\n  const isActive = localStorage.getItem(\"isActive\");\n  const marketPlaceAddress = process.env.REACT_APP_MARKETPLACE_ADDRESS;\n  const wethAddress = process.env.REACT_APP_WETH_ADDRESS;\n  const erc721Address = process.env.REACT_APP_ERC721_ADDRESS\n  const [isSale, setIsSale] = useState(false)\n  const [saleType, setSaleType] = useState()\n  const [file, setFile] = useState()\n  const [myipfsHash, setIPFSHASH] = useState('')\n  const [formErrors, setFormErrors] = useState({});\n  const [validate,setValidate] = useState(false);\n  \n  const [formData, setFormData] = useState({\n    nft__name: \"\",\n    nft__Description: \"\",\n    sale_amount: \"\",\n    seller_address: \"\",\n    royalty: \"\",\n    Imguri: \"\",\n    uri: \"\",\n    token_id: \"\",\n    signature: \"\",\n    nonce: \"\",\n    sale_type: \"\",\n    starting_amount: \"\",\n    reserve_amount: \"\",\n    decline_amount: \"\",\n    start_time: \"\",\n    end_time: \"\",\n    bidderAddress: \"\",\n    bidPrice: \"\",\n    bidderSignature: \"\",\n    bidTime: \"\",\n\n\n  });\n\n\n  const _tokenId = 0;\n  formData.token_id = _tokenId;\n\n  //IPFS \n\n\n  const handleSubmit = async (e) => {\n\n    e.preventDefault();\n    if (!account) {\n      return alert(\"Please connect your wallet first.\");\n\n\n    }\n    else {\n      \n      await setFormErrors(validation(formData));\n      \n      if (flag == 0) {\n        const _json = new File([JSON.stringify(formData)], 'metadata.json');\n        console.log(\"JSON File\", _json);\n  \n        \n  \n        // initialize the form data\n        const fData = new FormData()\n  \n        // append the file form data to \n        fData.append(\"file\", _json)\n  \n        // call the keys from .env\n  \n        const API_KEY = \"fac6b7fd3b77561f0151\"\n        const API_SECRET = '2b23fb1d7cfbae78e2761fd240c7199b34e53d7483b977bb9e5e14eb45b09d4f'\n  \n        // the endpoint needed to upload the file\n        const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`\n  \n        const response = await axios.post(\n          url,\n          fData,\n          {\n            maxContentLength: \"Infinity\",\n            headers: {\n              \"Content-Type\": `multipart/form-data;boundary=${formData._boundary}`,\n              'pinata_api_key': API_KEY,\n              'pinata_secret_api_key': API_SECRET\n  \n            }\n          }\n        )\n  \n        console.log(\"file\", response.data.IpfsHash)\n  \n        formData.uri = response.data.IpfsHash;\n  \n  \n        // const json_add = await client.add(_json);\n        // const json_cid = json_add.path;\n  \n        const _nonce = await Nonce();\n        const res1 = _nonce[0].nonce;\n  \n  \n        // formData.uri = json_cid;\n        formData.seller_address = account;\n        formData.nonce = res1;\n  \n  \n        console.log(\"Form Data\", formData);\n  \n  \n        if (isSale) {\n          \n          console.log(\"INSIDE ISSLAE\");\n          const _accounts = account;\n          const _tokenUri = formData.uri;\n          const _amount = formData.sale_amount;\n  \n          // console.log(\"Done <<<<<\",done);\n          // (setapporforAll(erc721))\n          if (saleType == \"fix\") {\n            formData.sale_type = saleType\n            console.log(\"-----------\", formData.sale_type);\n            const Signature = await Sign(_accounts, erc721Address, _tokenId, wethAddress, _tokenUri, _amount);\n            console.log(\"aaaaaaa\", Signature);\n            formData.signature = Signature;\n            await createMarketplaceNFT(formData);\n  \n          }\n          else {\n            if (saleType == \"auction\") {\n              \n              const auctionAmount = formData.starting_amount\n              formData.sale_type = saleType\n              const Signature = await Sign(_accounts, erc721Address, _tokenId, wethAddress, _tokenUri, auctionAmount);\n              console.log(\"aaaaaaa\", Signature);\n              formData.signature = Signature;\n  \n  \n  \n              await createMarketplaceNFT(formData);\n  \n            }\n            else {\n              formData.sale_type = \"\"\n              await createMarketplaceNFT(formData);\n  \n            }\n          }\n          const done = await SetApprovalForAll(true, account);\n          await createNFT(formData);\n  \n          await updateNonce(res1)\n  \n          const _nonc1e = await Nonce();\n          const res = _nonc1e[0].nonce;\n  \n          console.log(\"vvbev--------\", res);\n  \n  \n        }\n        else {\n          await createNFT(formData);\n          await updateNonce(res1)\n        }\n      }\n      else{\n      // setFormErrors(validation(formData));\n      }\n      \n    \n\n\n    }\n    \n    if (flag == 0) {\n      navigate('/home');\n    }\n    console.log(\"flag\",flag);\n\n\n    console.log(\"Data\", formData);\n\n  };\n\n  const getFile = async (e) => {\n    const file = e.target.files[0]\n\n    // const added = ipfs.files.add(file);\n    // const cid = `https://ipfs.io/ipfs/${added.path}`\n    // console.log(\"img cid\",cid);\n    // const added = await client.add(file)\n    // const cid = `https://ipfs.io/ipfs/${added.path}`\n    // formData.Imguri = cid;\n\n    console.log('starting')\n\n    // initialize the form data\n    const fData = new FormData()\n\n    // append the file form data to \n    fData.append(\"file\", file)\n\n    // call the keys from .env\n\n    const API_KEY = \"fac6b7fd3b77561f0151\"\n    const API_SECRET = '2b23fb1d7cfbae78e2761fd240c7199b34e53d7483b977bb9e5e14eb45b09d4f'\n\n    // the endpoint needed to upload the file\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`\n\n    const response = await axios.post(\n      url,\n      fData,\n      {\n        maxContentLength: \"Infinity\",\n        headers: {\n          \"Content-Type\": `multipart/form-data;boundary=${formData._boundary}`,\n          'pinata_api_key': API_KEY,\n          'pinata_secret_api_key': API_SECRET\n\n        }\n      }\n    )\n\n    const imgHash = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`\n\n\n    formData.Imguri = imgHash;\n\n\n\n    // get the hash\n    setIPFSHASH(response.data.IpfsHash);\n\n\n\n\n  }\n\n  const validation = (values) => {\n    \n    const errors = {}\n    \n    if (saleType == \"auction\") {\n      if (!values.nft__name) {\n        errors.nft__name = \"NFT Name is required\"\n        flag++;\n        \n      }\n      if (!values.nft__Description) {\n        errors.nft__Description = \"NFT Description is required\"\n        flag++;\n        \n      }\n      if (!values.starting_amount) {\n        errors.starting_amount = \"Starting Amount is required\"\n        flag++;\n        \n      }\n      if (!values.reserve_amount) {\n        errors.reserve_amount = \"Reserve Price is required\"\n        flag++;\n       \n      }\n      else {\n        if (values.reserve_amount < values.starting_amount) {\n          errors.reserve_amount = \"Reserve Price should be greater than starting price\"\n          flag++;\n         \n        }\n      }\n      if (!values.start_time) {\n        errors.start_time = \"Starting time is required\"\n        flag++;\n        \n      }\n      if (!values.end_time) {\n        errors.end_time = \"End time is required\"\n        flag++;\n        \n      }\n      return errors;\n    }\n    \n\n    if (saleType == \"fix\") {\n        if (!values.nft__name) {\n          errors.nft__name = \"NFT Name is required\"\n          \n          flag++;\n          \n        }\n        if (!values.nft__Description) {\n          errors.nft__Description = \"NFT Description is required\"\n          flag++;\n         \n        }\n        \n        if (!values.sale_amount) {\n          errors.sale_amount = \"Sale Price is required\"\n          flag++;\n         \n        }\n        // return errors;\n        \n      }\n      \n        if (!values.nft__name) {\n          errors.nft__name = \"NFT Name is required\"\n          flag++;\n         \n        }\n        if (!values.nft__Description) {\n          errors.nft__Description = \"NFT Description is required\"\n          flag++;\n          \n        }\n        \n        return errors;\n        \n      \n\n      \n    \n\n    \n  }\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setFormData({ ...formData, [name]: value });\n\n    \n  };\n\n  return (\n    <Container>\n      <Row>\n        <div className=\"create__nft\">\n          <h2>Create NFT</h2>\n\n          <Col lg=\"2\"></Col>\n          <Col lg=\"8\">\n\n            {\n              account ? (<h3>{account}</h3>) : <h3>Not Connected</h3>\n            }\n\n            <Form className=\"align-text-center\">\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Upload File</Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  name=\"Imguri\"\n                  onChange={getFile}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"nft__name\"\n                  value={formData.nft__name}\n                  onChange={handleChange}\n                  //ref={register({ required: true })}\n                  //ref={register({required: true})}\n                  \n                />\n              </Form.Group>\n\n              \n              <p className=\"_error\">{formErrors.nft__name}</p>\n              \n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"nft__Description\"\n                  value={formData.nft__Description}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <p className=\"_error\">{formErrors.nft__Description}</p>\n\n              <div>\n                <lable>\n                  Put on Sale\n                </lable>\n                <Switch\n                  onChange={() => {\n                    setIsSale(!isSale)\n                  }}\n                  checked={isSale}\n                />\n              </div>\n\n              {\n                isSale ? (\n\n                  <div class=\"sale\" >\n                    <Form.Group className=\"mb-3\">\n\n                      <select name=\"sale_type\" value=\"sale_type\" id=\"saleType\"\n                        onChange={(e) => setSaleType(e.target.value)}\n                      >\n                        <option>Sale Type</option>\n                        <option value=\"fix\">Fix Sale</option>\n                        <option value=\"auction\">Auction</option>\n\n\n\n\n                      </select>\n                      <p className=\"_error\">{formErrors.saleType}</p>\n\n                      <br />\n\n\n                      {\n                        saleType == \"fix\" ? (<>\n                          <Form.Label>Price</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            name=\"sale_amount\"\n                            value={formData.sale_amount}\n                            onChange={handleChange}\n                          />\n                          <p className=\"_error\">{formErrors.sale_amount}</p>\n\n\n                        </>) : (<>\n                          {\n                            saleType == \"auction\" ? (<>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Start Amount</Form.Label>\n                                <Form.Control\n                                  type=\"number\"\n                                  name=\"starting_amount\"\n                                  value={formData.starting_amount}\n                                  onChange={handleChange}\n                                />\n                              </Form.Group>\n                              <p className=\"_error\">{formErrors.starting_amount}</p>\n\n\n\n                              <Form.Label>Reserve Price</Form.Label>\n                              <Form.Control\n                                type=\"number\"\n                                name=\"reserve_amount\"\n                                value={formData.reserve_amount}\n                                onChange={handleChange}\n                              />\n                              <p className=\"_error\">{formErrors.reserve_amount}</p>\n\n\n                              <Form.Label>Bid Start Time</Form.Label>\n                              <Form.Control\n                                type=\"datetime-local\"\n\n                                name=\"start_time\"\n                                value={formData.start_time}\n                                onChange={handleChange}\n                              />\n                              <p className=\"_error\">{formErrors.start_time}</p>\n\n\n\n                              <Form.Label>Bid End Time</Form.Label>\n                              <Form.Control\n                                type=\"datetime-local\"\n\n                                name=\"end_time\"\n                                value={formData.end_time}\n                                onChange={handleChange}\n                              />\n                              <p className=\"_error\">{formErrors.end_time}</p>\n\n\n\n\n                            </>) : null\n                          }\n\n                        </>)\n                      }\n                    </Form.Group>\n                  </div>\n                ) : null\n              }\n\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Royalty</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"royalty\"\n                  value={formData.royalty}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" onClick={\nhandleSubmit\n                }>\n                Create NFT\n              </Button>\n            </Form>\n          </Col>\n          <Col lg=\"2\"></Col>\n        </div>\n      </Row>\n    </Container>\n  );\n\n}\nexport default NftForm;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ui/HeroSection.jsx",["167","168"],"import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport './hero-section.css'\nimport ReactSearchBox from \"react-search-box\";\n\nimport MarketPlace from \"../MarketPlace/MarketPlace\";\n\n\n\nconst HeroSection = () => {\n  return (\n    <section className=\"hero__section\">\n      <Container>\n        <Row>\n          \n\n          <Col lg=\"12\" md=\"12\">\n            <div className=\"her__content\">\n            \n              <h2 className=\"align-text-center\"><span className=\"hero_heding\">Community</span>-centric <br/>\nNFT marketplace</h2>\n            </div>\n          </Col>\n\n          <Col lg=\"12\" md=\"12\">\n          <div className=\"input_search\">\n          \n          <input type=\"search\" placeholder=\"search\" />\n         \n\n          </div>\n          \n          </Col>\n        </Row>\n      </Container>\n\n      <Container>\n        <Row>\n          <MarketPlace/>\n        </Row>\n      </Container>\n    </section>\n\n  );\n};\n\nexport default HeroSection;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/FixedPriceApi.js",["169","170"],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nexport const createFlatSale = async (formData) => {\n  //console.log(\"form Data\", formData);\n\n  axios({\n    url: \"http://localhost:5000/flatesale\",\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: formData,\n  })\n    .then((res) => res.json())\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getFlateSale = async() => {\n  const res=  await axios.get(\"http://localhost:5000/flatesale\");\n    return res;\n};\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/utils/utils.js",["171","172"],"import Web3 from \"web3\";\nimport Web3Utils from 'web3-utils';\nimport { Utils } from \"web3-utils\";\nimport { ethers } from \"ethers\";\nimport marketplaceAbi from \"./ABI.json\"\nimport erc721Abi from \"./erc721Abi.json\"\nimport wethAbi from \"./wethAbi.json\"\n\nrequire(\"dotenv\").config();\n\n\nconst web3 = new Web3(window.ethereum)\n\n\nconst marketPlaceAddress = process.env.REACT_APP_MARKETPLACE_ADDRESS;\nconst wethAddress = process.env.REACT_APP_WETH_ADDRESS;\nconst erc721Address = process.env.REACT_APP_ERC721_ADDRESS\n\nlet marketplace = new web3.eth.Contract(marketplaceAbi, marketPlaceAddress);\nlet weth = new web3.eth.Contract(wethAbi, wethAddress);\nlet erc721 = new web3.eth.Contract(erc721Abi, erc721Address);\n\nexport const truncateAddress = (address) => {\n  if (!address) return \"No Account\";\n  const match = address.match(\n    /^(0x[a-zA-Z0-9]{2})[a-zA-Z0-9]+([a-zA-Z0-9]{2})$/\n  );\n  if (!match) return address;\n  return `${match[1]}…${match[2]}`;\n};\n\nexport const toHex = (num) => {\n  const val = Number(num);\n  return \"0x\" + val.toString(16);\n};\n\n\nexport const Sign = async (account,nft_address,token_id,weth_address, tokenURi, amount) => {\n  let message = ethers.utils.solidityPack(\n    [\"address\", \"uint256\", \"string\", \"address\", \"uint256\"],\n    [nft_address, token_id, tokenURi,weth_address, amount]\n  );\n  let messageHash = ethers.utils.keccak256(message);\n  let sign = await web3.eth.personal.sign(messageHash, account);\n\n  console.log(sign);\n\n\n  return sign;\n};\n\nexport const buyerSign = async (accounts,input,bidTime) =>{\n  let message = ethers.utils.solidityPack(\n    [\"address\", \"uint256\", \"uint256\"],\n        [accounts, input, bidTime]\n  );\n\n  let messageHash = ethers.utils.keccak256(message);\n  let sign = await web3.eth.personal.sign(messageHash,accounts);\n\n  console.log(sign);\n  return sign;\n}\n\nexport const LazyBuy = async (lazyBuySellerArgs) =>{\n\n  let account = await web3.eth.getAccounts();\n\n  await marketplace.methods.lazyBuy(lazyBuySellerArgs).send({ from: account[0]});\n\n  return true;\n}\n\nexport const LazyAuction = async (lazyAuctionSellerArgs, bidderAgrs) =>{\n  debugger\n  let account = await web3.eth.getAccounts();\n\n  await marketplace.methods.lazyAuction(lazyAuctionSellerArgs, bidderAgrs).send({from: account[0]});\n}\n\nexport const SetApprovalForAll = async (status,account) =>{\n\n await erc721.methods.setApprovalForAll(marketPlaceAddress, status).send({from:account});\n\n}\n\nexport const SetApprove = async (amount,account) =>{\n await weth.methods.approve(marketPlaceAddress,amount).send({from:account});\n \n}\n\nexport const Deposit = async (amount,account) =>{\n  debugger\n  let amountInEth = ethers.utils.formatEther(amount)\n  console.log(\">>>>>\",ethers.utils.parseEther(amountInEth.toString()))\n\n  await weth.methods.deposit().send({from:account,value: ethers.utils.parseEther(amountInEth.toString()) });\n  \n }\n \n\nexport const Allowance  = async (account,marketPlaceAddress) =>{\n let allowance=  await weth.methods.allowance(account,marketPlaceAddress).call();\n \n return allowance;\n }\n\n\nexport const BalanceOf  = async (account) =>{\n  let balance=  await weth.methods.balanceOf(account).call();\n  \n  return balance;\n  }\n\n export const IsApprovalForAll  = async (account) =>{\n  let isApporve = await weth.methods.allowance(marketPlaceAddress,account).call();\n  return isApporve;\n }","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/MarketPlace/MarketPlace.jsx",["173","174","175","176","177","178","179","180","181"],"import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Container } from \"reactstrap\";\nimport NftForm from \"../NftForm/NftForm\";\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport '../MarketPlace/Market-place.css'\nimport { Button } from \"react-bootstrap\"\nimport Web3 from \"web3\";\nimport { LazyBuy, Allowance, SetApprove } from \"../utils/utils\";\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport Card from 'react-bootstrap/Card';\nimport { ethers } from \"ethers\";\nimport { getMarketplaceNFT } from \"../ApiCalls/MarketplaceApi\"\nimport NFTDetail from \"../../pages/NFTDetail\"\n\nconst marketPlaceAddress = process.env.REACT_APP_MARKETPLACE_ADDRESS;\nconst wethAddress = process.env.REACT_APP_WETH_ADDRESS;\nconst erc721Address = process.env.REACT_APP_ERC721_ADDRESS;\n\n\nconst MarketPlace = () => {\n  const [formData, setFormData] = useState([]);\n  let web3 = new Web3(window.ethereum);\n  const { account, library } = useWeb3React();\n\n\n\n  useEffect(() => {\n\n    getNFTs();\n  }, []);\n\n\n  // let signature  = SignLazybuyData()\n\n\n\n\n  const getNFTs = async () => {\n    const data = await getMarketplaceNFT();\n    console.log(\"Data in FixedPriceNFTs\", data.data);\n    // debugger\n    const res = data.data;\n    setFormData(res)\n    console.log(res, \"resssss\");\n  }\n\n  let lazyBuySellerArgs;\n\n  // const isApporveForAll =()\n  const FlatBuy = async () => {\n    const data = await getMarketplaceNFT();\n    const res = data.data;\n\n\n    //  let account = await web3.eth.getAccounts();\n    {\n      formData.map((item) => (\n\n        lazyBuySellerArgs = [\n          item.nonce,\n          account,\n          erc721Address,\n          wethAddress,\n          item?.token_id,\n          ethers.BigNumber.from(item?.royalty),\n          ethers.BigNumber.from(item?.sale_amount),\n          item?.signature,\n          item?.uri,\n          0,\n          0\n        ]\n\n      ))\n      // [\n      //   nonce,\n      //   buyer.address,\n      //   myNFT.address,\n      //   weth.address,\n      //   \"1\",\n      //   \"400\",\n      //   200,\n      //   sign,\n      //   \"abhi\",\n      //   block.timestamp,\n      //   block.timestamp + 100,\n      // ]\n\n\n    }\n\n    // if isAppforAll(erc721) ==true && alllwaqnce(weth) => amonut ) /else { apporve(weth)}\n\n    let allownce = await Allowance(account, marketPlaceAddress)\n    if (allownce >= lazyBuySellerArgs[6]) {\n\n      await LazyBuy(lazyBuySellerArgs);\n    }\n    else {\n      await SetApprove(lazyBuySellerArgs[6], account)\n      await LazyBuy(lazyBuySellerArgs);\n\n\n    }\n\n    console.log(\"Lazy Buy Contract Instance\", lazyBuySellerArgs);\n\n\n  }\n\n  formData.filter(items => items.sale_type.includes('auction')).map(item => (\n   console.log(\">>>>>>\",item)\n  ))\n\n\n  console.log(\"bbbbb\", erc721Address);\n\n  return (\n\n    <div className=\"nfts\">\n      <h2>Explore</h2>\n\n      <Carousel>\n        {\n          formData.map((item) => (\n            <>\n            <div key={item?._id}>\n              <a href={`/NFTDetail/${item._id}`}>\n                <Card style={{ width: '18rem' }}>\n\n                  <Card.Img variant=\"top\" src={item?.Imguri} alt=\"NFT\" />\n                  <Card.Body>\n                    <Card.Title>{item?.nft__name}</Card.Title>\n                    <Card.Text>\n                      {item?.sale_amount}\n                    </Card.Text>\n\n                  </Card.Body>\n\n                </Card>\n              </a>\n              </div>\n\n\n            </>\n          ))\n        }\n      </Carousel>\n      <div className=\"auctionButton\">\n        <Button href=\"/market\">See All</Button>\n        </div>\n\n      {/* Fixed Price NFTS */}\n      <div className=\"fixedPriceNft\" alignItems=\"flex-end\">\n\n        <h2>Fixed Price NFTs</h2>\n\n        <Carousel>\n          {\n            formData.filter(items => items.sale_type.includes('fix')).map(item => (\n              <a href={`/NFTDetail/${item?._id}`} >\n                \n\n              <Card style={{ width: '18rem' }}>\n\n                <Card.Img variant=\"top\" src={item?.Imguri} alt=\"NFT\" />\n                <Card.Body>\n                  <Card.Title>{item?.nft__name}</Card.Title>\n                  <Card.Text>\n                    {item?.sale_type}\n                  </Card.Text>\n\n                </Card.Body>\n\n              </Card>\n              </a>\n            ))\n\n          }\n\n        </Carousel>\n\n        <div className=\"auctionButton\">\n        <Button href=\"/market\">See All</Button>\n        </div>\n\n      </div>\n\n      {/* Auction Price NFTS */}\n\n      <div className=\"auctionPriceNft\">\n        <h2>Auction Price NFT</h2>\n\n        <Carousel>\n          {\n            formData.filter(items => items.sale_type.includes('auction')).map(item => (\n              <a href={`/NFTDetail/${item._id}`}>\n\n              <Card style={{ width: '18rem' }}>\n\n                <Card.Img variant=\"top\" src={item?.Imguri} alt=\"NFT\" />\n                <Card.Body>\n                  <Card.Title>{item?.nft__name}</Card.Title>\n                  <Card.Text>\n                    {item?.sale_type}\n                  </Card.Text>\n\n                </Card.Body>\n\n              </Card>\n              </a>\n            ))\n\n          }\n\n        </Carousel>\n        <div className=\"auctionButton\">\n        <Button href=\"/market\">See All</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n\n};\n\nexport default MarketPlace;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NonceApi.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/UserProfile.jsx",["182","183","184","185"],"import React from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { useWeb3React } from '@web3-react/core'\nimport \"./userProfile.css\"\nimport { useState } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\"\nimport 'react-tabs/style/react-tabs.css';\nimport { getFlateSale } from '../components/ApiCalls/FixedPriceApi'\nimport { useEffect } from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { getMarketplaceNFT } from \"../components/ApiCalls/MarketplaceApi\"\nconst UserProfile = () => {\n\n    const { account,activate } = useWeb3React();\n    const [formData, setFormData] = useState([]);\n    // const { activate, deactivate, account, library, chainId, active } = useWeb3React();\n\n    const Injected = new InjectedConnector({\n        supportedChainIds: [1, 3, 4, 5, 42,56, 137],\n       \n        \n      });\n    const connect = () =>{\n\n\n        if (typeof window.ethereum == 'undefined') {\n      console.log('MetaMask is not installed!');\n      alert('MetaMask is not installed!')\n      }\n      else{\n        \n        activate(Injected);\n        \n        setProvider(\"Injected\");\n      \n        localStorage.setItem('isWalletConnected',true)\n        // this.setState({\n        //   isActive:true\n        // })\n       \n      }\n      }\n\n      const setProvider = (type) => {\n        window.localStorage.setItem(\"provider\", type);\n      };\n\n    useEffect(() => {\n        const connectWalletOnPageLoad = async () => {\n          if (localStorage?.getItem('isWalletConnected') === 'true') {\n            try {\n              await connect();\n              localStorage.setItem('isWalletConnected', true)\n            } catch (ex) {\n              console.log(ex)\n            }\n          }\n        }\n        connectWalletOnPageLoad()\n\n        getData()\n      }, []);\n\n\n    const getData = async () => {\n\n        const data = await getMarketplaceNFT();\n\n        const res = data.data;\n        console.log(\"qqqqq\", res[0].seller_address);\n        setFormData(res);\n    }\n\n    console.log(\"wwwwww\", formData);\n\n\n    return (\n        <Container>\n\n            <div className='user_profile'>\n                <div className=\"user_img\">\n\n\n\n                </div>\n                <p>{account}</p>\n\n                <Tabs>\n                    <TabList>\n                        <Tab>Collected</Tab>\n                        <Tab>Created</Tab>\n                        <Tab>Collections</Tab>\n\n\n\n                    </TabList>\n\n                    <TabPanel>\n                                                <h2>Any content 1</h2>\n                                            </TabPanel>\n                                            <TabPanel>\n                                            <div classNameName=\"created\">\n\n<Row>\n\n    {\n        formData.map((item) => (\n            <>\n                {account == item.seller_address ? (\n\n\n                    <>\n\n                       \n                        \n                        <Col>\n                            <Card style={{ width: '18rem' }}>\n\n                                {item?.Imguri === \"\" ? <Card.Img variant=\"top\" src={\"https://storage.googleapis.com/opensea-static/opensea-profile/32.png\"} alt=\"NFT\" />\n                                    : <Card.Img variant=\"top\" src={item?.Imguri} alt=\"NFT\" />}\n                                <Card.Body>\n                                    <Card.Title>{item?.nft__name}</Card.Title>\n                                    <Card.Text>\n                                     <p>{item?.nft__Description}</p>\n                                     <p>{item?.sale_type}</p>   \n\n                                    </Card.Text>\n\n                                </Card.Body>\n                            </Card>\n                        </Col>\n\n\n                    </>\n\n                ) : null\n                }\n            </>\n        ))\n    }\n</Row>\n\n\n</div>\n                                            </TabPanel>\n                                            <TabPanel>\n                                                <h2>Any content 3</h2>\n                                            </TabPanel>\n\n                </Tabs>\n                \n                \n            </div>\n\n\n        </Container>\n    )\n}\n\nexport default UserProfile;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/MarketplaceApi.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NFTDetailsApi.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/NFTDetail.jsx",["186","187","188","189","190","191","192","193","194"],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Header/header.jsx",["195","196","197","198"],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Footer/footer.jsx",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":12},{"ruleId":"203","severity":1,"message":"207","line":41,"column":10,"nodeType":"205","messageId":"206","endLine":41,"endColumn":21},{"ruleId":"203","severity":1,"message":"208","line":41,"column":22,"nodeType":"205","messageId":"206","endLine":41,"endColumn":36},{"ruleId":"203","severity":1,"message":"209","line":43,"column":9,"nodeType":"205","messageId":"206","endLine":43,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":94,"column":6,"nodeType":"212","endLine":94,"endColumn":8,"suggestions":"213"},{"ruleId":"199","replacedBy":"214"},{"ruleId":"201","replacedBy":"215"},{"ruleId":"203","severity":1,"message":"216","line":9,"column":39,"nodeType":"205","messageId":"206","endLine":9,"endColumn":44},{"ruleId":"203","severity":1,"message":"217","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":14},{"ruleId":"203","severity":1,"message":"218","line":11,"column":10,"nodeType":"205","messageId":"206","endLine":11,"endColumn":17},{"ruleId":"203","severity":1,"message":"219","line":17,"column":9,"nodeType":"205","messageId":"206","endLine":17,"endColumn":17},{"ruleId":"203","severity":1,"message":"220","line":19,"column":21,"nodeType":"205","messageId":"206","endLine":19,"endColumn":31},{"ruleId":"203","severity":1,"message":"221","line":20,"column":10,"nodeType":"205","messageId":"206","endLine":20,"endColumn":17},{"ruleId":"203","severity":1,"message":"222","line":21,"column":10,"nodeType":"205","messageId":"206","endLine":21,"endColumn":17},{"ruleId":"203","severity":1,"message":"223","line":22,"column":10,"nodeType":"205","messageId":"206","endLine":22,"endColumn":19},{"ruleId":"203","severity":1,"message":"224","line":23,"column":10,"nodeType":"205","messageId":"206","endLine":23,"endColumn":18},{"ruleId":"203","severity":1,"message":"225","line":26,"column":9,"nodeType":"205","messageId":"206","endLine":26,"endColumn":22},{"ruleId":"203","severity":1,"message":"226","line":45,"column":11,"nodeType":"205","messageId":"206","endLine":45,"endColumn":25},{"ruleId":"203","severity":1,"message":"227","line":65,"column":9,"nodeType":"205","messageId":"206","endLine":65,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":97,"column":6,"nodeType":"212","endLine":97,"endColumn":8,"suggestions":"228"},{"ruleId":"203","severity":1,"message":"229","line":99,"column":9,"nodeType":"205","messageId":"206","endLine":99,"endColumn":21},{"ruleId":"203","severity":1,"message":"230","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":18},{"ruleId":"203","severity":1,"message":"231","line":2,"column":20,"nodeType":"205","messageId":"206","endLine":2,"endColumn":23},{"ruleId":"203","severity":1,"message":"232","line":2,"column":25,"nodeType":"205","messageId":"206","endLine":2,"endColumn":28},{"ruleId":"203","severity":1,"message":"233","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},{"ruleId":"203","severity":1,"message":"234","line":3,"column":15,"nodeType":"205","messageId":"206","endLine":3,"endColumn":21},{"ruleId":"203","severity":1,"message":"235","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":32},{"ruleId":"203","severity":1,"message":"236","line":3,"column":20,"nodeType":"205","messageId":"206","endLine":3,"endColumn":29},{"ruleId":"203","severity":1,"message":"237","line":3,"column":31,"nodeType":"205","messageId":"206","endLine":3,"endColumn":39},{"ruleId":"203","severity":1,"message":"238","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":16},{"ruleId":"203","severity":1,"message":"239","line":21,"column":10,"nodeType":"205","messageId":"206","endLine":21,"endColumn":16},{"ruleId":"203","severity":1,"message":"240","line":26,"column":8,"nodeType":"205","messageId":"206","endLine":26,"endColumn":17},{"ruleId":"203","severity":1,"message":"241","line":30,"column":7,"nodeType":"205","messageId":"206","endLine":30,"endColumn":13},{"ruleId":"203","severity":1,"message":"242","line":38,"column":7,"nodeType":"205","messageId":"206","endLine":38,"endColumn":11},{"ruleId":"203","severity":1,"message":"243","line":40,"column":20,"nodeType":"205","messageId":"206","endLine":40,"endColumn":27},{"ruleId":"203","severity":1,"message":"244","line":41,"column":10,"nodeType":"205","messageId":"206","endLine":41,"endColumn":18},{"ruleId":"203","severity":1,"message":"245","line":41,"column":20,"nodeType":"205","messageId":"206","endLine":41,"endColumn":26},{"ruleId":"203","severity":1,"message":"246","line":42,"column":10,"nodeType":"205","messageId":"206","endLine":42,"endColumn":16},{"ruleId":"203","severity":1,"message":"247","line":42,"column":18,"nodeType":"205","messageId":"206","endLine":42,"endColumn":27},{"ruleId":"203","severity":1,"message":"219","line":43,"column":9,"nodeType":"205","messageId":"206","endLine":43,"endColumn":17},{"ruleId":"203","severity":1,"message":"248","line":44,"column":9,"nodeType":"205","messageId":"206","endLine":44,"endColumn":27},{"ruleId":"203","severity":1,"message":"249","line":49,"column":10,"nodeType":"205","messageId":"206","endLine":49,"endColumn":14},{"ruleId":"203","severity":1,"message":"250","line":49,"column":16,"nodeType":"205","messageId":"206","endLine":49,"endColumn":23},{"ruleId":"203","severity":1,"message":"251","line":50,"column":10,"nodeType":"205","messageId":"206","endLine":50,"endColumn":20},{"ruleId":"203","severity":1,"message":"252","line":52,"column":10,"nodeType":"205","messageId":"206","endLine":52,"endColumn":18},{"ruleId":"203","severity":1,"message":"253","line":52,"column":19,"nodeType":"205","messageId":"206","endLine":52,"endColumn":30},{"ruleId":"254","severity":1,"message":"255","line":98,"column":16,"nodeType":"256","messageId":"257","endLine":98,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":161,"column":24,"nodeType":"256","messageId":"257","endLine":161,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":171,"column":26,"nodeType":"256","messageId":"257","endLine":171,"endColumn":28},{"ruleId":"203","severity":1,"message":"258","line":190,"column":17,"nodeType":"205","messageId":"206","endLine":190,"endColumn":21},{"ruleId":"254","severity":1,"message":"255","line":216,"column":14,"nodeType":"256","messageId":"257","endLine":216,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":285,"column":18,"nodeType":"256","messageId":"257","endLine":285,"endColumn":20},{"ruleId":"254","severity":1,"message":"255","line":327,"column":18,"nodeType":"256","messageId":"257","endLine":327,"endColumn":20},{"ruleId":"254","severity":1,"message":"255","line":464,"column":34,"nodeType":"256","messageId":"257","endLine":464,"endColumn":36},{"ruleId":"254","severity":1,"message":"255","line":477,"column":38,"nodeType":"256","messageId":"257","endLine":477,"endColumn":40},{"ruleId":"203","severity":1,"message":"217","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"259","line":5,"column":8,"nodeType":"205","messageId":"206","endLine":5,"endColumn":22},{"ruleId":"203","severity":1,"message":"260","line":2,"column":10,"nodeType":"205","messageId":"206","endLine":2,"endColumn":18},{"ruleId":"203","severity":1,"message":"261","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},{"ruleId":"203","severity":1,"message":"262","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":17},{"ruleId":"203","severity":1,"message":"263","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":15},{"ruleId":"203","severity":1,"message":"264","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":13},{"ruleId":"203","severity":1,"message":"230","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":19},{"ruleId":"203","severity":1,"message":"265","line":5,"column":8,"nodeType":"205","messageId":"206","endLine":5,"endColumn":15},{"ruleId":"203","severity":1,"message":"266","line":17,"column":8,"nodeType":"205","messageId":"206","endLine":17,"endColumn":17},{"ruleId":"203","severity":1,"message":"242","line":26,"column":7,"nodeType":"205","messageId":"206","endLine":26,"endColumn":11},{"ruleId":"203","severity":1,"message":"243","line":27,"column":20,"nodeType":"205","messageId":"206","endLine":27,"endColumn":27},{"ruleId":"203","severity":1,"message":"267","line":54,"column":9,"nodeType":"205","messageId":"206","endLine":54,"endColumn":16},{"ruleId":"203","severity":1,"message":"268","line":56,"column":11,"nodeType":"205","messageId":"206","endLine":56,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":60,"column":5,"nodeType":"271","messageId":"272","endLine":93,"endColumn":6},{"ruleId":"203","severity":1,"message":"273","line":8,"column":10,"nodeType":"205","messageId":"206","endLine":8,"endColumn":22},{"ruleId":"203","severity":1,"message":"234","line":10,"column":8,"nodeType":"205","messageId":"206","endLine":10,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":65,"column":10,"nodeType":"212","endLine":65,"endColumn":12,"suggestions":"274"},{"ruleId":"254","severity":1,"message":"255","line":112,"column":26,"nodeType":"256","messageId":"257","endLine":112,"endColumn":28},{"ruleId":"203","severity":1,"message":"275","line":2,"column":20,"nodeType":"205","messageId":"206","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"276","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":16},{"ruleId":"203","severity":1,"message":"277","line":27,"column":10,"nodeType":"205","messageId":"206","endLine":27,"endColumn":15},{"ruleId":"203","severity":1,"message":"278","line":27,"column":17,"nodeType":"205","messageId":"206","endLine":27,"endColumn":25},{"ruleId":"210","severity":1,"message":"279","line":48,"column":6,"nodeType":"212","endLine":48,"endColumn":8,"suggestions":"280"},{"ruleId":"203","severity":1,"message":"281","line":50,"column":7,"nodeType":"205","messageId":"206","endLine":50,"endColumn":12},{"ruleId":"269","severity":1,"message":"270","line":81,"column":5,"nodeType":"271","messageId":"272","endLine":116,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":235,"column":16,"nodeType":"256","messageId":"257","endLine":235,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":287,"column":13,"nodeType":"284","endLine":287,"endColumn":67},{"ruleId":"203","severity":1,"message":"207","line":41,"column":10,"nodeType":"205","messageId":"206","endLine":41,"endColumn":21},{"ruleId":"203","severity":1,"message":"208","line":41,"column":22,"nodeType":"205","messageId":"206","endLine":41,"endColumn":36},{"ruleId":"203","severity":1,"message":"209","line":43,"column":9,"nodeType":"205","messageId":"206","endLine":43,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":94,"column":6,"nodeType":"212","endLine":94,"endColumn":8,"suggestions":"285"},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'colorChange' is assigned a value but never used.","'setColorChange' is assigned a value but never used.","'headerRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connect'. Either include it or remove the dependency array.","ArrayExpression",["288"],["286"],["287"],"'Toast' is defined but never used.","'Link' is defined but never used.","'connect' is defined but never used.","'isActive' is assigned a value but never used.","'deactivate' is assigned a value but never used.","'network' is assigned a value but never used.","'message' is assigned a value but never used.","'signature' is assigned a value but never used.","'verified' is assigned a value but never used.","'handleNetwork' is assigned a value but never used.","'CoinbaseWallet' is assigned a value but never used.","'switchNetwork' is assigned a value but never used.",["289"],"'refreshState' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'useLayoutEffect' is defined but never used.","'useEffect' is defined but never used.","'setState' is defined but never used.","'Buffer' is defined but never used.","'errors' is defined but never used.","'pinataSDK' is defined but never used.","'client' is assigned a value but never used.","'web3' is assigned a value but never used.","'library' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'buffer' is assigned a value but never used.","'setBuffer' is assigned a value but never used.","'marketPlaceAddress' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'myipfsHash' is assigned a value but never used.","'validate' is assigned a value but never used.","'setValidate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'done' is assigned a value but never used.","'ReactSearchBox' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'Web3Utils' is defined but never used.","'Utils' is defined but never used.","'axios' is defined but never used.","'NftForm' is defined but never used.","'NFTDetail' is defined but never used.","'FlatBuy' is assigned a value but never used.","'res' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'getFlateSale' is defined but never used.",["290"],"'useRef' is defined but never used.","'ethers' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNFT'. Either include it or remove the dependency array.",["291"],"'count' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["292"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"293","fix":"295"},{"desc":"293","fix":"296"},{"desc":"297","fix":"298"},{"desc":"293","fix":"299"},"Update the dependencies array to be: [connect]",{"range":"300","text":"301"},{"range":"302","text":"301"},{"range":"303","text":"301"},"Update the dependencies array to be: [getNFT]",{"range":"304","text":"305"},{"range":"306","text":"301"},[1860,1862],"[connect]",[2835,2837],[1939,1941],[1574,1576],"[getNFT]",[1860,1862]]