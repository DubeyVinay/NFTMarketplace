[{"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/index.js":"1","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/App.js":"2","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/reportWebVitals.js":"3","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Layout/Layout.jsx":"4","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/routes/Routers.js":"5","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Header/Header.jsx":"6","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Footer/Footer.jsx":"7","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Market.jsx":"8","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Wallet.jsx":"9","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Create.jsx":"10","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Contact.jsx":"11","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Home.jsx":"12","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/NftForm/NftForm.jsx":"13","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ui/HeroSection.jsx":"14","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/FixedPriceApi.js":"15","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/utils/utils.js":"16","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NFTDetails.js":"17","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/MarketPlace/MarketPlace.jsx":"18","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NonceApi.js":"19","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/UserProfile.jsx":"20"},{"size":1134,"mtime":1658814940148,"results":"21","hashOfConfig":"22"},{"size":187,"mtime":1658314222900,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1656334061000,"results":"24","hashOfConfig":"22"},{"size":314,"mtime":1656336894000,"results":"25","hashOfConfig":"22"},{"size":754,"mtime":1659428069420,"results":"26","hashOfConfig":"22"},{"size":2167,"mtime":1659450369529,"results":"27","hashOfConfig":"22"},{"size":2485,"mtime":1657806336818,"results":"28","hashOfConfig":"22"},{"size":113,"mtime":1656335423000,"results":"29","hashOfConfig":"22"},{"size":5511,"mtime":1659425998558,"results":"30","hashOfConfig":"22"},{"size":274,"mtime":1656663830000,"results":"31","hashOfConfig":"22"},{"size":115,"mtime":1656335482000,"results":"32","hashOfConfig":"22"},{"size":172,"mtime":1657009274000,"results":"33","hashOfConfig":"22"},{"size":6087,"mtime":1659426144726,"results":"34","hashOfConfig":"22"},{"size":1377,"mtime":1659421758595,"results":"35","hashOfConfig":"22"},{"size":566,"mtime":1658223565340,"results":"36","hashOfConfig":"22"},{"size":2247,"mtime":1659426012015,"results":"37","hashOfConfig":"22"},{"size":364,"mtime":1658908794111,"results":"38","hashOfConfig":"22"},{"size":3150,"mtime":1659440782816,"results":"39","hashOfConfig":"22"},{"size":149,"mtime":1659364420128,"results":"40","hashOfConfig":"22"},{"size":4236,"mtime":1659450005526,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"26q3mu",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/index.js",[],["93","94"],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/App.js",["95"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return <Layout/>\n}\n\nexport default App;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/reportWebVitals.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Layout/Layout.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/routes/Routers.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Header/Header.jsx",["96","97"],"import React from 'react'\nimport {Container} from 'reactstrap';\nimport { NavLink, Link} from 'react-router-dom';\nimport { useRef, useEffect } from 'react';\nimport '../Header/Header.css'\nimport { useWeb3React } from '@web3-react/core';\n\n\nconst NAV__LINKS = [\n  {\n    display:'Home',\n    url:'/home '\n  },\n  {\n    display:'Market',\n    url:'/market '\n  },\n  {\n    display:'Create',\n    url:'/create '\n  },\n  {\n    display:'Contact',\n    url:'/contact '\n  },\n  {\n    display:'Wallet',\n    url:'/wallet '\n  },\n  {\n    display:'User',\n    url:'/user '\n  },\n]\n\nconst Header = () => {\n\n  const {account} = useWeb3React();\n\n  const headerRef = useRef(null);\n\n  const menuRef = useRef(null);\n\n  const toggleMenu = () => menuRef.current.classList.toggle('active__menu');\n\n  return <header className=\"header\">\n    <Container>\n      <div className=\"navigation\"> \n        <div className=\"logo\">\n          <Link to='/home'><h2 className='d-flex gap-2 align-items-center'>\n            <span><i class=\"ri-store-2-fill\"></i></span> NFT Marketplace\n          </h2>\n          </Link>\n        </div>\n\n        <div className=\"nav__right d-flex align-items-center gap-5\">\n\n          { \n            !account ? (<button className=\"btn d-flex align-items-center gap-2\">\n            <Link to='/wallet'><span><i class=\"ri-wallet-2-line\"></i></span>Connect Wallet</Link>\n          </button>) : (<button className=\"btn d-flex align-items-center gap-2\"><Link to='/user'><i class=\"ri-store-2-fill\"></i></Link></button>)\n\n          }\n          \n          <div>\n          <span className=\"mobile__menu\"><i class=\"ri-menu-2-line\" onClick={toggleMenu}></i></span>\n          <div className=\"nav__menu\" ref={menuRef} onClick={toggleMenu}>\n           <ul className=\"nav__list\">\n\n              {\n                NAV__LINKS.map((item, index)=> (<li className='nav__item' key={index}>\n                  <NavLink to={item.url} className={(navClass)=> navClass.isActive ? 'active' : ''}>{item.display}</NavLink>\n                </li>\n                ))}\n              \n           </ul>\n        </div>\n          </div>\n          \n        </div>\n      </div>\n    </Container>\n  </header>\n}\n\nexport default Header","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/Footer/Footer.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Market.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Wallet.jsx",["98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import React from 'react'\nimport { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n//import { toHex, truncateAddress } from '../components/utils/utils';\n//import { networkParams } from '../components/networks/networks';\nimport { Container, Row, Col, Button, Toast } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from '../components/utils/utils';\nimport \"./wallet.css\"\n\n\n\nconst Wallet = () => {\n  const isActive = localStorage.getItem(\"isActive\");\n  \n  const { activate, deactivate, account, library, chainId, active } = useWeb3React();\n  const [network, setNetwork] = useState(undefined);\n  const [message, setMessage] = useState(\"\");\n  const [signature, setSignature] = useState(\"\");\n  const [verified, setVerified] = useState();\n  // const isActive = localStorage.getItem(\"isActive\");\n\n  const handleNetwork = (e) =>{\n    const id = e.target.supportedChainIds;\n    setNetwork(Number(id));\n  };\n\n  // if (typeof window.ethereum == 'undefined') {\n  //   console.log('MetaMask is not installed!');\n  // }\n  \n    const Injected = new InjectedConnector({\n      supportedChainIds: [1, 3, 4, 5, 42,56, 137],\n     \n      \n    });\n  \n\n   \n  const coinbasewallet = async () =>{\n  try {\n    const CoinbaseWallet = new WalletLinkConnector({\n    \n      url: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n      appName: \"Web3-react Demo\",\n      supportedChainIds: [1, 3, 4, 5, 42],\n    }); \n  } \n  catch (error) {\n    console.log(error);\n    alert(\"Coinbasewallet not found\");\n  }\n}\n   \n  \n   const WalletConnect = new WalletConnectConnector({\n    rpcUrl: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n  });\n\n  const switchNetwork = async () => {\n    try {\n      await library.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        //params: [{ chainId: toHex(network) }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await library.provider.request({\n            method: \"wallet_addEthereumChain\",\n            //params: [networkParams[toHex(network)]]\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const connectWalletOnPageLoad = async () => {\n      if (localStorage?.getItem('isWalletConnected') === 'true') {\n        try {\n          await connect();\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad()\n  }, []);\n\n  const refreshState = () => {\n    window.localStorage.setItem(\"provider\", undefined);\n    setNetwork(\"\");\n    setMessage(\"\");\n    setSignature(\"\");\n    setVerified(undefined);\n  };\n  const setProvider = (type) => {\n    window.localStorage.setItem(\"provider\", type);\n  };\n  // const disconnect = () => {\n  //   refreshState();\n  //   deactivate();\n  //   localStorage.setItem(\"isActive\",false);\n  //   this.setState({\n  //     isActive:false\n  //   })\n\n  // };\n\n  const connect = () =>{\n\n\n      if (typeof window.ethereum == 'undefined') {\n    console.log('MetaMask is not installed!');\n    alert('MetaMask is not installed!')\n    }\n    else{\n      \n      activate(Injected);\n      \n      setProvider(\"Injected\");\n    \n      localStorage.setItem('isWalletConnected',true)\n      // this.setState({\n      //   isActive:true\n      // })\n     \n    }\n    }\n  \n  \n  console.log(\"ccccccc\",account);\n  \n  return (\n    <Container>\n      <Row>\n        <div>\n\n          <div className='wallet__btns d-flex gap-2 align-items-center'>\n          <Col lg=\"3\">\n          <div >\n            {/* {this.state.isActive ? \"true\" : \"false\"} */}\n          \n          <Button onClick={connect}\n                  className=\"btn__metamask\">\n              <span>Connect to Metamask</span>\n          </Button>\n\n          \n          \n        </div>\n          </Col>\n          <Col lg=\"3\">\n          <div >\n          \n          <Button onClick={() => {\n                    activate(coinbasewallet.CoinbaseWallet);\n                  }} className=\"btn__coinbase\">\n              <span>Connect to Coinbase</span>\n          </Button>\n          \n        </div>\n          </Col>\n          <Col lg=\"3\">\n          <div >\n          \n          <Button onClick={() => {\n                    activate(WalletConnect);\n                  }} className=\"btn__walletconnect\">\n              <span>Connect to Wallet Connect</span>\n          </Button>\n          \n        </div>\n          </Col>\n          <Col>\n            \n              {/* <Button onClick={disconnect}>Disconnect</Button> */}\n            \n          </Col>\n          </div>\n        </div>\n      </Row>\n      <Row>\n        <div className='connect__info'>\n\n          <Col lg=\"4\">\n            <p>Connection Status:</p>\n            {active ? (<span>Connected</span>) : <span>Not Connected</span>}\n          </Col>\n          <Col lg=\"4\">\n            <p>\n            {/* {'Account: ${truncateAddress(account)}`} */}\n            </p>\n          </Col>\n          <Col lg=\"4\">\n            <p>\n            {`Network ID: ${chainId ? chainId : \"No Network\"}`}\n            </p>\n          </Col>\n        </div>\n      </Row> \n    </Container>\n  )}\n\nexport default Wallet;","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Create.jsx",["112","113","114","115","116"],"import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\nimport {Form, Button} from 'react-bootstrap'\nimport './create.css'\nimport NftForm from '../components/NftForm/NftForm'\nconst Create = () => {\n  return (\n    <NftForm/>\n   \n  )\n}\n\nexport default Create;","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Contact.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/Home.jsx",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/NftForm/NftForm.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { useLayoutEffect } from \"react\";\n\nimport { useState, useEffect, setState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { createFlatSale } from \"../ApiCalls/FixedPriceApi\";\nimport { createNFT } from \"../ApiCalls/NFTDetails\";\n\nimport { Buffer } from \"buffer\";\n\nimport '../NftForm/NftForm.css'\nimport Switch from 'react-switch'\n\nimport { create } from 'ipfs-http-client';\nimport { useWeb3React } from \"@web3-react/core\";\nimport Web3 from \"web3\";\nimport { SetApprovalForAll, Sign } from \"../utils/utils\"\nimport { Nonce } from \"../ApiCalls/NonceApi\";\n\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nconst NftForm = () => {\n\n\n  let web3 = new Web3(window.ethereum);\n\n  const { account, library} = useWeb3React();\n  const [buffer, setBuffer] = useState(null);\n  const isActive = localStorage.getItem(\"isActive\");\n  const marketPlaceAddress = process.env.REACT_APP_MARKETPLACE_ADDRESS;\n  const wethAddress = process.env.REACT_APP_WETH_ADDRESS;\n  const erc721Address = process.env.REACT_APP_ERC721_ADDRESS\n  const [isSale, setIsSale] = useState(false)\n  const [formData, setFormData] = useState({\n    nft__name: \"\",\n    nft__Description: \"\",\n    sale_amount: \"\",\n    seller_address: \"\",\n    royalty: \"\",\n    Imguri: \"\",\n    uri: \"\",\n    token_id: \"\",\n    signature: \"\",\n    nonce:\"\"\n\n  });\n\n\n  const _tokenId = 0;\n  formData.token_id = _tokenId;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!account) {\n      return alert(\"Please connect your wallet first.\");\n\n\n    }\n    else {\n\n      const _json = new File([JSON.stringify(formData)], 'metadata.json');\n      console.log(\"JSON File\", _json);\n\n      const json_add = await client.add(_json);\n      const json_cid = json_add.path;\n\n      const _nonce = 0;\n\n\n\n      formData.uri = json_cid;\n      formData.seller_address = account;\n      formData.nonce = 0\n\n      console.log(\"Json file cid\", json_cid);\n      console.log(\"Form Data\", formData);\n\n      console.log(\"Accounts\", account);\n\n      if (isSale) {\n\n        const _accounts = account;\n        const _tokenUri = formData.uri;\n        const _amount = formData.sale_amount;\n        const Signature = await Sign(_accounts, erc721Address, _tokenId, wethAddress, _tokenUri, _amount);\n        console.log(\"aaaaaaa\", Signature);\n        formData.signature = Signature;\n        await createFlatSale(formData);\n        const done = await SetApprovalForAll(true, account);\n        // (setapporforAll(erc721))\n\n      }\n      else {\n        await createNFT(formData);\n      }\n\n    }\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const getFile = async (e) => {\n    const file = e.target.files[0]\n    const added = await client.add(file)\n    const cid = `https://ipfs.infura.io/ipfs/${added.path}`\n    formData.Imguri = cid;\n    console.log(\"image cid\", formData.Imguri);\n  }\n\n  const getCidMetaData = async (e, metadata) => {\n    const added = await client.add(metadata)\n    const cid = `https://ipfs.infura.io/ipfs/${added.path}`\n    formData.uri = cid;\n    console.log(\"form cid\", formData.uri);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <div className=\"create__nft\">\n          <h2>Create NFT</h2>\n\n          <Col lg=\"2\"></Col>\n          <Col lg=\"8\">\n\n            {\n              account ? (<h3>{account}</h3>) : <h3>Not Connected</h3>\n            }\n\n            <Form className=\"align-text-center\">\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Upload File</Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  name=\"nft_image\"\n                  onChange={getFile}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"nft__name\"\n                  value={formData.nft__name}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"nft__Description\"\n                  value={formData.nft__Description}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <div>\n                <lable>\n                  Put on Sale\n                </lable>\n                <Switch\n                  onChange={() => {\n                    setIsSale(!isSale)\n                  }}\n                  checked={isSale}\n                />\n              </div>\n\n              {\n                isSale ? (\n\n                  <div class=\"sale\" >\n                    <Form.Group className=\"mb-3\">\n\n                      <select name=\"saleType\" id=\"saleType\">\n\n                        <option value=\"fix\">Fix Sale</option>\n\n\n\n                      </select>\n                      <br />\n                      <Form.Label>Price</Form.Label>\n                      <Form.Control\n                        type=\"number\"\n                        name=\"sale_amount\"\n                        value={formData.sale_amount}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                  </div>\n                ) : null\n              }\n\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Royalty</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"royalty\"\n                  value={formData.royalty}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                Create NFT\n              </Button>\n            </Form>\n          </Col>\n          <Col lg=\"2\"></Col>\n        </div>\n      </Row>\n    </Container>\n  );\n\n}\nexport default NftForm;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ui/HeroSection.jsx",["131"],"import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport './hero-section.css'\n\nimport MarketPlace from \"../MarketPlace/MarketPlace\";\n\n\n\nconst HeroSection = () => {\n  return (\n    <section className=\"hero__section\">\n      <Container>\n        <Row>\n          {/* <Col lg=\"6\" md=\"6\">\n            <div className=\"her__content\">\n              <h2>Discover, collect, and sell extraordinary NFTs</h2>\n              <h5>OpenSea is the world's first and largest NFT marketplace</h5>\n              <div className=\"her__btn\">\n                <button>\n                  <Link to=\"#\">\n                    <span>Explore</span>\n                  </Link>\n                </button>\n                <button>\n                  <Link to=\"#\">\n                    <span>Create</span>\n                  </Link>\n                </button>\n              </div>\n            </div>\n          </Col> */}\n\n          <Col lg=\"12\" md=\"12\">\n            <div className=\"her__content\">\n            \n              <h2 className=\"align-text-center\"><span className=\"hero_heding\">Community</span>-centric <br/>\nNFT marketplace</h2>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n\n      <Container>\n        <Row>\n          <MarketPlace/>\n        </Row>\n      </Container>\n    </section>\n\n  );\n};\n\nexport default HeroSection;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/FixedPriceApi.js",["132","133"],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nexport const createFlatSale = async (formData) => {\n  //console.log(\"form Data\", formData);\n\n  axios({\n    url: \"http://localhost:5000/flatesale\",\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: formData,\n  })\n    .then((res) => res.json())\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getFlateSale = async() => {\n  const res=  await axios.get(\"http://localhost:5000/flatesale\");\n    return res;\n\n    \n};\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/utils/utils.js",["134","135"],"import Web3 from \"web3\";\nimport Web3Utils from 'web3-utils';\nimport { Utils } from \"web3-utils\";\nimport { ethers } from \"ethers\";\nimport marketplaceAbi from \"./ABI.json\"\nimport erc721Abi from \"./erc721Abi.json\"\nimport wethAbi from \"./wethAbi.json\"\n\n\nconst web3 = new Web3(window.ethereum)\n\n\nconst marketPlaceAddress = process.env.REACT_APP_MARKETPLACE_ADDRESS;\nconst wethAddress = process.env.REACT_APP_WETH_ADDRESS;\nconst erc721Address = process.env.REACT_APP_ERC721_ADDRESS\n\nlet marketplace = new web3.eth.Contract(marketplaceAbi, marketPlaceAddress);\nlet weth = new web3.eth.Contract(wethAbi, wethAddress);\nlet erc721 = new web3.eth.Contract(erc721Abi, erc721Address);\n\nexport const truncateAddress = (address) => {\n  if (!address) return \"No Account\";\n  const match = address.match(\n    /^(0x[a-zA-Z0-9]{2})[a-zA-Z0-9]+([a-zA-Z0-9]{2})$/\n  );\n  if (!match) return address;\n  return `${match[1]}…${match[2]}`;\n};\n\nexport const toHex = (num) => {\n  const val = Number(num);\n  return \"0x\" + val.toString(16);\n};\n\n\nexport const Sign = async (account,nft_address,token_id,weth_address, tokenURi, amount) => {\n  let message = ethers.utils.solidityPack(\n    [\"address\", \"uint256\", \"string\", \"address\", \"uint256\"],\n    [nft_address, token_id, tokenURi,weth_address, amount]\n  );\n  let messageHash = ethers.utils.keccak256(message);\n  let sign = await web3.eth.personal.sign(messageHash, account);\n\n  console.log(sign);\n\n\n  return sign;\n};\n\nexport const LazyBuy = async (lazyBuySellerArgs) =>{\n\n  let account = await web3.eth.getAccounts();\n\n  await marketplace.methods.lazyBuy(lazyBuySellerArgs).send({ from: account[0]});\n\n\n}\n\nexport const SetApprovalForAll = async (status,account) =>{\n\n await erc721.methods.setApprovalForAll(marketPlaceAddress, status).send({from:account});\n\n}\n\nexport const SetApprove = async (amount,account) =>{\n await weth.methods.approve(marketPlaceAddress,amount).send({from:account});\n \n}\n\nexport const Allowance  = async (account,marketPlaceAddress) =>{\n let allowance=  await weth.methods.allowance(account,marketPlaceAddress).call();\n \n return allowance;\n }\n\n export const IsApprovalForAll  = async (account) =>{\n  let isApporve = await weth.methods.allowance(marketPlaceAddress,account).call();\n  return isApporve;\n }","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NFTDetails.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/MarketPlace/MarketPlace.jsx",["136","137","138","139","140","141","142","143"],"import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { getFlateSale } from \"../ApiCalls/FixedPriceApi\";\nimport Gallary from 'react-bootstrap'\nimport NftForm from \"../NftForm/NftForm\";\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport '../MarketPlace/Market-place.css'\nimport { Button } from \"react-bootstrap\"\nimport Web3 from \"web3\";\nimport { LazyBuy,Allowance,SetApprove } from \"../utils/utils\";\n\nimport { useWeb3React } from \"@web3-react/core\";\n\nconst marketPlaceAddress = process.env.REACT_APP_MARKETPLACE_ADDRESS;\nconst wethAddress = process.env.REACT_APP_WETH_ADDRESS;\nconst erc721Address = process.env.REACT_APP_ERC721_ADDRESS;\n\nconst FixedPriceNfts = () => {\n  const [formData, setFormData] = useState([]);\n  let web3 = new Web3(window.ethereum);\n  const { account, library } = useWeb3React();\n  \n\n  \n\n  \n\n  useEffect(() => {\n    \n    getNFTs();\n  }, []);\n\n\n  // let signature  = SignLazybuyData()\n\n\n \n\n  const getNFTs = async () => {\n    const data = await getFlateSale();\n    console.log(\"Data in FixedPriceNFTs\", data.data);\n    // debugger\n    const res = data.data;\n    setFormData(res)\n  }\n\n  let lazyBuySellerArgs ;\n\n  const getNFT = async() =>{\n \n  }\n\n\n    // const isApporveForAll =()\n  const FlatBuy = async () => {\n    const data = await getFlateSale();\n const res = data.data;\n\n//  let account = await web3.eth.getAccounts();\n    { formData.map((item) =>(\n\n      lazyBuySellerArgs = [\n        item?.nonce,\n        account,\n        erc721Address,\n         wethAddress,\n        item?.token_id,\n        item?.royalty,\n        item?.sale_amount,\n        item?.signature,\n        item?.uri,\n        0,\n        0\n      ]\n      \n    ))\n    // [\n    //   nonce,\n    //   buyer.address,\n    //   myNFT.address,\n    //   weth.address,\n    //   \"1\",\n    //   \"400\",\n    //   200,\n    //   sign,\n    //   \"abhi\",\n    //   block.timestamp,\n    //   block.timestamp + 100,\n    // ]\n     \n\n  }\n    \n    // if isAppforAll(erc721) ==true && alllwaqnce(weth) => amonut ) /else { apporve(weth)}\n    \n    let allownce = await Allowance(account,marketPlaceAddress)\n     if(allownce >= lazyBuySellerArgs[6]){\n\n       await LazyBuy(lazyBuySellerArgs);\n     }\n     else{\n      await SetApprove(lazyBuySellerArgs[6],account)\n     \n     }\n\n    console.log(\"Lazy Buy Contract Instance\",lazyBuySellerArgs);\n    \n  }\n\n\n  console.log(\"bbbbb\",erc721Address);\n\n  return (\n\n    <div className=\"nfts\">\n      <h2>Explore</h2>\n\n      <Carousel>\n        {\n          formData.map((item) => (\n            <>\n              {/* Name : {item?.nft__name}  <br/>\n    <img src={item.uri} alt=\"\" /> */}\n              <div id={item?._id} className=\"slide_item\">\n                <img src={item?.Imguri} alt=\"\" />\n                <p>{item?.nft__name}</p>\n                <p>{item?.sale_amount}</p>\n                <p></p>\n                <br />\n              </div>\n\n              <Button data-item-id={item?._id} onClick={FlatBuy}>Buy</Button>\n            </>\n          ))\n        }\n      </Carousel>\n    </div>\n  )\n\n\n};\n\nexport default FixedPriceNfts;\n","/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/components/ApiCalls/NonceApi.js",[],"/Users/dr.mac/Documents/blockchainproject/Marketplace/frontend/src/pages/UserProfile.jsx",["144","145","146"],"import React from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { useWeb3React } from '@web3-react/core'\nimport \"./userProfile.css\"\nimport { useState } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\"\nimport 'react-tabs/style/react-tabs.css';\nimport { getFlateSale } from '../components/ApiCalls/FixedPriceApi'\nimport { useEffect } from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport { InjectedConnector } from '@web3-react/injected-connector'\nconst UserProfile = () => {\n\n    const { account,activate } = useWeb3React();\n    const [formData, setFormData] = useState([]);\n    // const { activate, deactivate, account, library, chainId, active } = useWeb3React();\n\n    const Injected = new InjectedConnector({\n        supportedChainIds: [1, 3, 4, 5, 42,56, 137],\n       \n        \n      });\n    const connect = () =>{\n\n\n        if (typeof window.ethereum == 'undefined') {\n      console.log('MetaMask is not installed!');\n      alert('MetaMask is not installed!')\n      }\n      else{\n        \n        activate(Injected);\n        \n        setProvider(\"Injected\");\n      \n        localStorage.setItem('isWalletConnected',true)\n        // this.setState({\n        //   isActive:true\n        // })\n       \n      }\n      }\n\n      const setProvider = (type) => {\n        window.localStorage.setItem(\"provider\", type);\n      };\n\n    useEffect(() => {\n        const connectWalletOnPageLoad = async () => {\n          if (localStorage?.getItem('isWalletConnected') === 'true') {\n            try {\n              await connect();\n              localStorage.setItem('isWalletConnected', true)\n            } catch (ex) {\n              console.log(ex)\n            }\n          }\n        }\n        connectWalletOnPageLoad()\n\n        getData()\n      }, []);\n\n\n    const getData = async () => {\n\n        const data = await getFlateSale();\n\n        const res = data.data;\n        console.log(\"qqqqq\", res[0].seller_address);\n        setFormData(res);\n    }\n\n    console.log(\"wwwwww\", formData);\n\n\n    return (\n        <Container>\n\n            <div className='user_profile'>\n                <div className=\"user_img\">\n\n\n\n                </div>\n                <p>{account}</p>\n\n                <Tabs>\n                    <TabList>\n                        <Tab>Collected</Tab>\n                        <Tab>Created</Tab>\n                        <Tab>Collections</Tab>\n\n\n\n                    </TabList>\n\n                    <TabPanel>\n                                                <h2>Any content 1</h2>\n                                            </TabPanel>\n                                            <TabPanel>\n                                            <div classNameName=\"created\">\n\n<Row>\n\n    {\n        formData.map((item) => (\n            <>\n                {account == item.seller_address ? (\n\n\n                    <>\n\n                       \n                        \n                        <Col>\n                            <Card style={{ width: '18rem' }}>\n\n                                {item?.Imguri === \"\" ? <Card.Img variant=\"top\" src={\"https://storage.googleapis.com/opensea-static/opensea-profile/32.png\"} alt=\"NFT\" />\n                                    : <Card.Img variant=\"top\" src={item?.Imguri} alt=\"NFT\" />}\n                                <Card.Body>\n                                    <Card.Title>{item?.nft__name}</Card.Title>\n                                    <Card.Text>\n                                        {item?.nft__Description}\n                                    </Card.Text>\n\n                                </Card.Body>\n                            </Card>\n                        </Col>\n\n\n                    </>\n\n                ) : null\n                }\n            </>\n        ))\n    }\n</Row>\n\n\n</div>\n                                            </TabPanel>\n                                            <TabPanel>\n                                                <h2>Any content 3</h2>\n                                            </TabPanel>\n\n                </Tabs>\n                \n                \n            </div>\n\n\n        </Container>\n    )\n}\n\nexport default UserProfile;\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":12},{"ruleId":"151","severity":1,"message":"155","line":4,"column":18,"nodeType":"153","messageId":"154","endLine":4,"endColumn":27},{"ruleId":"151","severity":1,"message":"156","line":40,"column":9,"nodeType":"153","messageId":"154","endLine":40,"endColumn":18},{"ruleId":"151","severity":1,"message":"157","line":9,"column":39,"nodeType":"153","messageId":"154","endLine":9,"endColumn":44},{"ruleId":"151","severity":1,"message":"158","line":10,"column":10,"nodeType":"153","messageId":"154","endLine":10,"endColumn":14},{"ruleId":"151","severity":1,"message":"159","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":17},{"ruleId":"151","severity":1,"message":"160","line":17,"column":9,"nodeType":"153","messageId":"154","endLine":17,"endColumn":17},{"ruleId":"151","severity":1,"message":"161","line":19,"column":21,"nodeType":"153","messageId":"154","endLine":19,"endColumn":31},{"ruleId":"151","severity":1,"message":"162","line":20,"column":10,"nodeType":"153","messageId":"154","endLine":20,"endColumn":17},{"ruleId":"151","severity":1,"message":"163","line":21,"column":10,"nodeType":"153","messageId":"154","endLine":21,"endColumn":17},{"ruleId":"151","severity":1,"message":"164","line":22,"column":10,"nodeType":"153","messageId":"154","endLine":22,"endColumn":19},{"ruleId":"151","severity":1,"message":"165","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":18},{"ruleId":"151","severity":1,"message":"166","line":26,"column":9,"nodeType":"153","messageId":"154","endLine":26,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":45,"column":11,"nodeType":"153","messageId":"154","endLine":45,"endColumn":25},{"ruleId":"151","severity":1,"message":"168","line":65,"column":9,"nodeType":"153","messageId":"154","endLine":65,"endColumn":22},{"ruleId":"169","severity":1,"message":"170","line":97,"column":6,"nodeType":"171","endLine":97,"endColumn":8,"suggestions":"172"},{"ruleId":"151","severity":1,"message":"173","line":99,"column":9,"nodeType":"153","messageId":"154","endLine":99,"endColumn":21},{"ruleId":"151","severity":1,"message":"174","line":2,"column":9,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"151","severity":1,"message":"175","line":2,"column":20,"nodeType":"153","messageId":"154","endLine":2,"endColumn":23},{"ruleId":"151","severity":1,"message":"176","line":2,"column":25,"nodeType":"153","messageId":"154","endLine":2,"endColumn":28},{"ruleId":"151","severity":1,"message":"177","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":13},{"ruleId":"151","severity":1,"message":"178","line":3,"column":15,"nodeType":"153","messageId":"154","endLine":3,"endColumn":21},{"ruleId":"151","severity":1,"message":"179","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":32},{"ruleId":"151","severity":1,"message":"155","line":3,"column":20,"nodeType":"153","messageId":"154","endLine":3,"endColumn":29},{"ruleId":"151","severity":1,"message":"180","line":3,"column":31,"nodeType":"153","messageId":"154","endLine":3,"endColumn":39},{"ruleId":"151","severity":1,"message":"181","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":16},{"ruleId":"151","severity":1,"message":"182","line":18,"column":10,"nodeType":"153","messageId":"154","endLine":18,"endColumn":15},{"ruleId":"151","severity":1,"message":"183","line":26,"column":7,"nodeType":"153","messageId":"154","endLine":26,"endColumn":11},{"ruleId":"151","severity":1,"message":"184","line":28,"column":20,"nodeType":"153","messageId":"154","endLine":28,"endColumn":27},{"ruleId":"151","severity":1,"message":"185","line":29,"column":10,"nodeType":"153","messageId":"154","endLine":29,"endColumn":16},{"ruleId":"151","severity":1,"message":"186","line":29,"column":18,"nodeType":"153","messageId":"154","endLine":29,"endColumn":27},{"ruleId":"151","severity":1,"message":"160","line":30,"column":9,"nodeType":"153","messageId":"154","endLine":30,"endColumn":17},{"ruleId":"151","severity":1,"message":"187","line":31,"column":9,"nodeType":"153","messageId":"154","endLine":31,"endColumn":27},{"ruleId":"151","severity":1,"message":"188","line":68,"column":13,"nodeType":"153","messageId":"154","endLine":68,"endColumn":19},{"ruleId":"151","severity":1,"message":"189","line":90,"column":15,"nodeType":"153","messageId":"154","endLine":90,"endColumn":19},{"ruleId":"151","severity":1,"message":"190","line":116,"column":9,"nodeType":"153","messageId":"154","endLine":116,"endColumn":23},{"ruleId":"151","severity":1,"message":"158","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"191","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"151","severity":1,"message":"192","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":13},{"ruleId":"151","severity":1,"message":"193","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":17},{"ruleId":"151","severity":1,"message":"194","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":15},{"ruleId":"151","severity":1,"message":"195","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":13},{"ruleId":"151","severity":1,"message":"196","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"151","severity":1,"message":"197","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":15},{"ruleId":"151","severity":1,"message":"183","line":22,"column":7,"nodeType":"153","messageId":"154","endLine":22,"endColumn":11},{"ruleId":"151","severity":1,"message":"184","line":23,"column":20,"nodeType":"153","messageId":"154","endLine":23,"endColumn":27},{"ruleId":"151","severity":1,"message":"198","line":51,"column":9,"nodeType":"153","messageId":"154","endLine":51,"endColumn":15},{"ruleId":"151","severity":1,"message":"199","line":59,"column":8,"nodeType":"153","messageId":"154","endLine":59,"endColumn":11},{"ruleId":"200","severity":1,"message":"201","line":62,"column":5,"nodeType":"202","messageId":"203","endLine":94,"endColumn":4},{"ruleId":"151","severity":1,"message":"178","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":64,"column":10,"nodeType":"171","endLine":64,"endColumn":12,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":111,"column":26,"nodeType":"207","messageId":"208","endLine":111,"endColumn":28},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'headerRef' is assigned a value but never used.","'Toast' is defined but never used.","'Link' is defined but never used.","'connect' is defined but never used.","'isActive' is assigned a value but never used.","'deactivate' is assigned a value but never used.","'network' is assigned a value but never used.","'message' is assigned a value but never used.","'signature' is assigned a value but never used.","'verified' is assigned a value but never used.","'handleNetwork' is assigned a value but never used.","'CoinbaseWallet' is assigned a value but never used.","'switchNetwork' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connect'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'refreshState' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'useLayoutEffect' is defined but never used.","'setState' is defined but never used.","'Buffer' is defined but never used.","'Nonce' is defined but never used.","'web3' is assigned a value but never used.","'library' is assigned a value but never used.","'buffer' is assigned a value but never used.","'setBuffer' is assigned a value but never used.","'marketPlaceAddress' is assigned a value but never used.","'_nonce' is assigned a value but never used.","'done' is assigned a value but never used.","'getCidMetaData' is assigned a value but never used.","'useState' is defined but never used.","'React' is defined but never used.","'Web3Utils' is defined but never used.","'Utils' is defined but never used.","'axios' is defined but never used.","'Gallary' is defined but never used.","'NftForm' is defined but never used.","'getNFT' is assigned a value but never used.","'res' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["212"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},"Update the dependencies array to be: [connect]",{"range":"216","text":"217"},{"range":"218","text":"217"},[2835,2837],"[connect]",[1865,1867]]